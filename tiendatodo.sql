-- MySQL Script generated by MySQL Workbench
-- Sun Mar 26 00:40:27 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tiendatodo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tiendatodo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tiendatodo` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `tiendatodo` ;

-- -----------------------------------------------------
-- Table `tiendatodo`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendatodo`.`clientes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `telefono` VARCHAR(15) NULL DEFAULT NULL,
  `direccion` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email` (`email` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1100214323
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `tiendatodo`.`productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendatodo`.`productos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `descripcion` VARCHAR(255) NULL DEFAULT NULL,
  `precio` DECIMAL(10,2) NOT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `tiendatodo`.`ventas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendatodo`.`ventas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cliente_id` INT NOT NULL,
  `producto_id` INT NOT NULL,
  `fecha` DATE NOT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `cliente_id` (`cliente_id` ASC) VISIBLE,
  INDEX `producto_id` (`producto_id` ASC) VISIBLE,
  CONSTRAINT `ventas_ibfk_1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `tiendatodo`.`clientes` (`id`),
  CONSTRAINT `ventas_ibfk_2`
    FOREIGN KEY (`producto_id`)
    REFERENCES `tiendatodo`.`productos` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `tiendatodo` ;

-- -----------------------------------------------------
-- procedure clientes_totalcompra
-- -----------------------------------------------------

DELIMITER $$
USE `tiendatodo`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `clientes_totalcompra`(in _id int, out total int)
begin
	
        select sum(v.cantidad) into total from Ventas as v inner join 
        Clientes as c on c.id=v.cliente_id and c.id=_id group by c.id;
        
        end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure totalCompra
-- -----------------------------------------------------

DELIMITER $$
USE `tiendatodo`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `totalCompra`()
begin
	declare _nombre varchar(25);
	declare cc int;
	declare valor int;
    
    declare curs1 cursor for 
		select c.nombre, v.cliente_id,sum(v.cantidad*p.precio)  from Ventas as v,Productos as p,Clientes as c
		where v.cliente_id=c.id group by v.cliente_id;
    
    open curs1;
		read_loop : loop
		fetch curs1 into _nombre,cc,valor;
        select _nombre,cc,valor;
    
		end loop;
    close curs1;

end$$

DELIMITER ;
USE `tiendatodo`;

DELIMITER $$
USE `tiendatodo`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `tiendatodo`.`verificar_cliente`
BEFORE INSERT ON `tiendatodo`.`Ventas`
FOR EACH ROW
BEGIN
  IF NOT EXISTS (SELECT id FROM Clientes WHERE id = NEW.cliente_id) THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'El cliente no existe';
  END IF;
END$$

USE `tiendatodo`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `tiendatodo`.`actualizar_stock`
AFTER INSERT ON `tiendatodo`.`Ventas`
FOR EACH ROW
UPDATE Productos
			SET cantidad = cantidad - NEW.cantidad
		WHERE id = NEW.producto_id;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
